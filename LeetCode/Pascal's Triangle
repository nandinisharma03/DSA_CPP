class Solution {
 private:
    int fact(int num) {
        int fact = 1;
        for (int i = 1; i <= num; i++) {
            fact *= i;
        }
        return fact;
    }

    int nCr(int N, int R) {
        return fact(N) / (fact(R) * fact(N - R));
    }

    std::vector<std::vector<int>> pascaltri(int n) {
        std::vector<std::vector<int>> triangle;
        for (int i = 0; i < n; i++) {
            std::vector<int> row(i + 1, 1);
            for (int j = 1; j < i; j++) {
                row[j] = triangle[i - 1][j - 1] + triangle[i - 1][j];
            }
            triangle.push_back(row);
        }
        return triangle;
    }
public:
    vector<vector<int>> generate(int numRows) {
        return pascaltri(numRows);
    }
};
