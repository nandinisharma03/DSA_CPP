class Solution {
public:
    vector<vector<int>> largestLocal(vector<vector<int>>& grid) {
       int n = grid.size();
    vector<vector<int>> rowMax(n, vector<int>(n - 2, 0));
    vector<vector<int>> maxLocal(n - 2, vector<int>(n - 2, 0));

    // Step 1: Compute row-wise maximums for each row and store them in rowMax
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n - 2; ++j) {
            rowMax[i][j] = max({grid[i][j], grid[i][j + 1], grid[i][j + 2]});
        }
    }

    // Step 2: Compute the final maximums for the 3x3 submatrices using the row-wise maximums
    for (int i = 0; i < n - 2; ++i) {
        for (int j = 0; j < n - 2; ++j) {
            maxLocal[i][j] = max({rowMax[i][j], rowMax[i + 1][j], rowMax[i + 2][j]});
        }
    }

    return maxLocal; 
    }
};
