class Solution {
public:
    std::string sortSentence(std::string s) {
        std::vector<std::string> map(10); // Adjust the size to 10 to account for  1-based indexing up to 9.
        int count = 0;
        std::string word = "";
        
        // Splitting words into map, 1-indexed
        for (int i = 0; i < s.size(); i++) {
            if (std::isdigit(s[i])) { // Using std::isdigit to check if the character is a digit
                map[s[i] - '0'] = word;
                word = "";
                ++count;
            } else {
                if (s[i] != ' ') {
                    word += s[i];
                }
            }
        }
        
        word = "";
        for (int i = 1; i <= count; ++i) { // Ensuring to loop only till the count of words
            if (i == count) {
                word += map[i];
            } else {
                word += map[i] + ' ';
            }
        }
        
        return word;
    }
};
